<div class="flex">
  <div class="form-container bg-base-100 shadow-md p-8">
    <div class="flex items-center justify-between">
      <%= link_to travel_book_path(@travel_book), class: "hover:opacity-50" do %>
        <i class="fa-solid fa-chevron-left"></i>
      <% end %>
      <div class="flex flex-grow flex-col items-center">
        <h3><%= @travel_book.title %></h3>
        <p><%= travel_book_duration(@travel_book) %></p>
      </div>
    </div>

    <% if @schedules.present? %>
      <div role="tablist" class="tabs tabs-bordered">
        <!-- Tab for allday -->
        <input type="radio" data-spots="<%= @schedules.map(&:spot).compact.select { |spot| spot.latitude.present? }.to_json %>" name="my_tabs_1" role="tab" class="tab" aria-label="ALL" checked="checked"/>
        <div role="tabpanel" class="tab-content p-10">
          <% @schedules.each_with_index do |schedule, i| %>
            <%= render partial: "schedule", locals: { schedule: schedule, all_day: true, index: i } %>
          <% end %>
          <p class="text-right my-5"><%= t("helpers.total_amount", amount: total_budget(@schedules)) %><%= t("helpers.currency_unit") %></p>
        </div>

        <!-- Tab for each date -->
        <% Schedule.group_by_date(@schedules).each do |date, schedules| %>

          <input type="radio" data-spots="<%= schedules.map(&:spot).compact.select { |spot| spot.latitude.present? }.to_json %>" name="my_tabs_1" role="tab" class="tab" aria-label="<%= fmt_date_with_day(date) %>" />
          <div role="tabpanel" class="tab-content p-10">
            <% schedules.each_with_index do |schedule, i| %>
              <%= render partial: "schedule", locals: { schedule: schedule, index: i } %>
            <% end %>
            <p class="text-right my-5"><%= t("helpers.total_amount", amount: total_budget(schedules)) %><%= t("helpers.currency_unit") %></p>
          </div>
        <% end %>
      </div>
    <% else %>
      <% if @travel_book.owned_by_user?(current_user) %>
        <p class="text-center my-10"><%= t(".no_data") %></p>
      <% else %>
        <p class="text-center my-10"><%= t(".no_creator_no_data") %></p>
      <% end %>
    <% end %>


    <% if @travel_book.owned_by_user?(current_user) %>
      <%= link_to new_travel_book_schedule_path(@travel_book), data: { turbo: false }, class: "btn btn-primary fixed z-50 bottom-20 right-5 rounded-full cursor-pointer" do %>
        <%= t(".new_button") %>
      <% end %>
    <% end %>
  </div>

  <div id="map-container" class="relative w-full h-[calc(100vh-64px)]">
    <div id="map" class="w-full h-full"></div>
    <div id="popup" class="absolute bottom-[calc(64px+10px)] left-1/2 -translate-x-1/2"></div>
  </div>
</div>

<script>
let popup, Popup;
let map;
function initMap() {
  console.log("initMap")
  // Railsから渡されたスポットデータをJSで扱えるようにJSON形式に変換
  const initSpotsJsonData = <%= raw @spots.to_json(only: [:id, :latitude, :longitude, :name, :schedule_id ]) %>;
  // tabをクリックしたらグローバル変数のspotsが更新されるためそれを取得
  const spots = window.spots || initSpotsJsonData;
  console.log(initSpotsJsonData)
  console.log(spots)

  // 表示するMapの位置を緯度経度で指定
  // @spotsが空の場合、東京駅をセンターにする
  // @spotsが空でない場合、場所が紐づく一つ目のスケジュールの場所をセンターにする
  const position = Array.isArray(spots) && spots.length > 0
    ? { lat: parseFloat(spots[0].latitude), lng: parseFloat(spots[0].longitude) }
    : { lat: 35.6803997, lng: 139.7690174 }; // デフォルトの位置（東京駅）

  map = new google.maps.Map(document.getElementById("map"),  {
    zoom: 11,
    center: position,
    mapId: "DEMO_MAP_ID", // 高度なmarkerを使用するために必要
  });

  spots.forEach((spot,i) =>{
    // markerの設定
    //  const marker = new google.maps.marker.AdvancedMarkerElement({
      // position: {lat: parseFloat(spot.latitude), lng: parseFloat(spot.longitude)},
      // map: map,
      // title: spot.name
    // });
    // markerに登録された場所のindex番号を表示
    const pinTextGlyph = new google.maps.marker.PinElement({
      glyph: `${i+1}`,
      glyphColor: "white",
    });
    // markerを表示
    const markerViewGlyphText = new google.maps.marker.AdvancedMarkerElement({
      map,
      position: {lat: parseFloat(spot.latitude), lng: parseFloat(spot.longitude)},
      content: pinTextGlyph.element,
    });

    // markerがクリックされた時に地図の詳細情報を表示
    markerViewGlyphText.addListener("click", ()=> {
      // URLを生成
      const scheduleUrl = "<%= request.base_url %>/schedules/" + spot.schedule_id;
      // popupを表示
      document.getElementById("popup").innerHTML =
      `<div class="card bg-base-100 w-96 shadow-md">
        <div class="card-body">
          <div class="flex items-center justify-between">
            <a href="${scheduleUrl}" class="text-blue-500 underline">${spot.name}</a>
            <button id="close-btn" class="btn btn-square btn-sm">
              <i class="fa-solid fa-xmark"></i>
            </button>
          </div>
        </div>
      </div>`;

      // 削除ボタンクリック時にpopupを削除
      document.querySelector("#close-btn").addEventListener("click", () => {
        document.getElementById("popup").innerHTML = "";
      });
    });
  });
}

document.addEventListener("DOMContentLoaded", function () {
  console.log("DOMContentLoaded");
  const tabs = document.querySelectorAll('input[name="my_tabs_1"]');

  tabs.forEach(tab => {
    tab.addEventListener("change", ()=> {
      console.log(tab);
      // viewで設定したカスタムdata属性からデータを取得
      const spots = JSON.parse(tab.getAttribute("data-spots") || "[]");
      console.log("Updated spots:", spots);
      // グローバル変数のspotsを更新し
      window.spots = spots;
      // マップを再描写
      initMap();
    });
  });
});

</script>
<script async
  src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAPS_API_KEY'] %>&loading=async&libraries=marker&callback=initMap">
</script>
